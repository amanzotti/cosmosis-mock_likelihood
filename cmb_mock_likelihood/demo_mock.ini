[runtime]
; The test sampler just runs a single parameter set
sampler = multinest
root = ${COSMOSIS_SRC_DIR}


[emcee]
walkers = 16
samples = 80
nsteps = 2


[multinest]
; The cut-off point, though sampling can end
; earlier if convergence on the evidence is
; reached
max_iterations=2000
update_interval = 1
; The number of active points in the multinest
; algorithm.
live_points=200
resume = F

; Multinest can produce a large amount of additional
; output.  If you're an expert you can set a base
; file root to use for all those files here
multinest_outfile_root= /home/manzotti/cosmosis/modules/likelihoods/cmb_mock_likelihood/chains/multinest_checkpoint/
efficiency = 1.
tolerance = 0.01
max_modes = 5


[metropolis]
nsteps=10
random_start=F
samples=100000

; This will only be used if you
; run cosmosis with MPI
Rconverge = 0.02

[test]
save_dir= /home/manzotti/cosmosis/modules/likelihoods/cmb_mock_likelihood/output
fatal_errors=T

[output]
format=text
filename= /home/manzotti/cosmosis/modules/likelihoods/cmb_mock_likelihood/output_emcee.txt
; delimiter=,

[maxlike]
maxiter = 300
tolerance = 0.005
output_ini = /home/manzotti/cosmosis/modules/likelihoods/cmb_mock_likelihood/max.ini

[snake]
nsample_dimension = 10

[grid]
nsample_dimension = 30

[pipeline]
modules = consistency camb forecast
values = modules/likelihoods/cmb_mock_likelihood/values_mock.ini

; We are now asking for some likelihoods
; at the end of the pipeline.  When doing
; MCMC this line specified the likelihoods to use
; for the acceptance.  Otherwise it just gets
; printed out
likelihoods = forecast
quiet=T
debug=T
timing=F

[planck]
file =  modules/likelihoods/cmb_mock_likelihood/planck/planck_interface.so
; The Planck module has some file paths it needs setting
; These files can all be downloaded from the Planck archives

; Please fill in and uncomment this line:
t_high_file = ${PLANCK_DATA_DIR}/CAMspec_v6.2TN_2013_02_26_dist.clik

;We will leave out lensing for now. If any of these 
; are not set then that likelihood will not be included.
;t_low_file = ups/planckdata/v1_1/data/lowlike_v222.clik
;p_low_file =
;lensing_file =

; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

; Planck is the same as before, except we tell it to include tensors
; In fact because we are specifing r_T in the values2.ini file they
; would be included anyway, but it is good practice to include them here
[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=cmb
lmax=2000
feedback=0
do_tensors=F
do_lensing=F
do_nonlinear=T
high_ell_template=cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat

[forecast]
file =  modules/likelihoods/cmb_mock_likelihood/mock_like_interface.py
